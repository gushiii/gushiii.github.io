{"meta":{"title":"Gushiii","subtitle":"Stay Hungary,Stay Foolish","description":"Blog","author":"gushiii","url":"https://gushiii.github.io"},"pages":[{"title":"","date":"2018-07-18T09:29:46.878Z","updated":"2018-07-18T09:29:46.878Z","comments":true,"path":"about/index.html","permalink":"https://gushiii.github.io/about/index.html","excerpt":"","text":"关于我从事 WEB 开发，主要开发语言 Java，熟悉使用 MVC 等主流框架；对 JavaBean 情有独钟；有一定的代码洁癖。 对服务端、前端、数据分析等技能有所了解。 热爱开源项目、热爱新技术、热爱新事物。 关于工作城市：天津 关于学习正在往终身学习者前进…近期学习方向：大数据（BigData） 关于座右铭 The Harder You Work, The Luckier You Will Be. 关于爱好热爱运动，尤其喜爱Blues、摇滚、吉他。 联系我 Home: gushiii.top Blog: blog.minhow.com Email: 1726143054@qq.com QQ: 1726143054"}],"posts":[{"title":"Java数组","slug":"Java数组","date":"2018-07-18T10:13:56.000Z","updated":"2018-07-21T07:03:41.114Z","comments":true,"path":"2018/07/18/Java数组/","link":"","permalink":"https://gushiii.github.io/2018/07/18/Java数组/","excerpt":"","text":"一维数组数组声明 在使用数组前必须先声明12345671、数据类型[] 数组名2、数据类型 数组名[]//比如:int[] m;int m[]; 数组的创建12345数组名 = new 数据类型[长度];//比如:m = new int[10]; 引用数组中的元素12345678数组名[下标]//比如:int m = new int[10];System.out.println(m[5]);int i = 4;System.out.println(m[i]); 数组的初始化123456789//动态初始化int[] m = new int[10];m[0] = 0;m[1] = 1;……//静态初始化int[] m = &#123;1,2,3,4,5&#125;;int[] m = new int[] &#123;1,2,3,4,5&#125;; 获取数组长度123//数组名.lengthint[] m = new int[] &#123;1,2,3,4,5&#125;;int len = m.length; for-each遍历数组12345678for(数据类型 变量名 : 数组或集合变量名) &#123; //通过变量名访问元素的值&#125;int[] array = &#123;1,2,3,4,5&#125;for(int element : array) &#123; System.out.println(element);&#125; 多维数组声明和创建123456789101112//声明1、数据类型[][] 数组名;2、数据类型[] 数组名[];3、数据类型 数组名[][];//int[][] m;int[] m[];int m[][];//创建数组名 = new 数据类型[第一维长度][第二维长度]int m = new int[4][5]; //也可以不写第二维长度 引用二维数组中的元素12数组名[第一维下标][第二维下标];int a = m[0][0]; 多维数组的初始化123456789101112//动态初始化int[][] a = new int[4][];a[0] = new int[2];a[1] = new int[3];a[0][0] = 1;a[0][1] = 2;a[1][0] = 3;a[1][1] = 4;a[1][2] = 5;//静态初始化int a[][] = &#123;&#123;1,3&#125;,&#123;2,4,6&#125;&#125;; 多维数组的长度123456789int m[][] = &#123; &#123;1,3,5&#125;, &#123;2,4&#125;, &#123;1,5,7,9&#125;&#125;;int count = 0;for(int i = 0; i&lt;m.length; i++)&#123; count += m[i].length;&#125;System.out.println(count); 多维数组的遍历12345678910111213141516171819202122//for嵌套int m[][] = &#123; &#123;1,3,5&#125;, &#123;2,4&#125;, &#123;1,5,7,9&#125;&#125;;for(int i = 0; i&lt;m.length; i++)&#123; int[] temp = m[i]; for(int j = 0; j&lt;temp.length; j++)&#123; System.out.println(\"m[\" + i + \"][\" + j + \"] = \" + m[i][j]); &#125;&#125;//for-eachint m[][] = &#123; &#123;1,3,5&#125;, &#123;2,4&#125;, &#123;1,5,7,9&#125;&#125;;for(int[] temp : m)&#123; for(int result : temp)&#123; System.out.println(result); &#125;&#125;","categories":[{"name":"Java","slug":"Java","permalink":"https://gushiii.github.io/categories/Java/"}],"tags":[{"name":"Java数组","slug":"Java数组","permalink":"https://gushiii.github.io/tags/Java数组/"}]},{"title":"Java基础语法","slug":"Java基础语法","date":"2018-07-18T02:04:56.000Z","updated":"2018-07-18T08:56:35.392Z","comments":true,"path":"2018/07/18/Java基础语法/","link":"","permalink":"https://gushiii.github.io/2018/07/18/Java基础语法/","excerpt":"","text":"代码框架1234567891011121314151617181920212223242526访问修饰符 class 类名 &#123; //程序入口（main方法） public static void main(String[] args) &#123; //程序入口方法中的代码 &#125;&#125;//比如：public class Test&#123; public static void main(String[] args)&#123; System.out.println(&quot;Hello World!&quot;); &#125;&#125; 数据类型Java中数据类型共有8种，按用途分为4个类别：整数型(int)、浮点型(float,double)、字符型(char)、布尔型(boolean) 变量1234567891011//变量的声明//数据类型 变量名;int age;//变量的初始化//变量名 = 值;age = 20; 类型转换 自动转换(隐式转换) -无损转换 byte -&gt; short -&gt; int -&gt; long char -&gt; int int -&gt; double float -&gt; double -有损精度的转换 int -&gt; float long -&gt; double 强制转换(显式转换) 123456//(目标类型) 需要转换的值double d = 3.1415926;float f = (float)d; //强转 运算符12345678910111213141516171819202122232425//算数运算符//包括:+、-、*、/、%、++、--//赋值运算符//包括:-、+=、-=、*=、/=、%=//关系运算符//包括:==、！=、&lt;、&gt;、&lt;=、&gt;=//逻辑运算符//包括:&amp;&amp;、||、！、&amp;、|、^//&amp;&amp;与&amp;的区别(&amp;&amp;进行短路操作，&amp;不进行短路操作即在得到最终结果前，一定会对两边进行求值操作)","categories":[{"name":"Java","slug":"Java","permalink":"https://gushiii.github.io/categories/Java/"}],"tags":[{"name":"Java语法","slug":"Java语法","permalink":"https://gushiii.github.io/tags/Java语法/"}]},{"title":"Java环境搭建","slug":"Java环境搭建","date":"2018-07-17T09:44:15.000Z","updated":"2018-07-18T08:11:12.644Z","comments":true,"path":"2018/07/17/Java环境搭建/","link":"","permalink":"https://gushiii.github.io/2018/07/17/Java环境搭建/","excerpt":"","text":"JDK安装和配置下载JDK在Oracle官网下载 1http://www.oracle.com/technetwork/java/javase/downloads/index.html **单击红框中标出的download按钮下载** **注意要先选择Accept License Agreement 之后下载Windows对应的jdk(JDK10 不支持X86的系统)** **全部默认，一路下一步** 配置JDK**右键我的电脑，单击属性，选择高级系统设置** **选择环境变量** **在系统变量下单击新建，输入变量名“JAVA_HOME，输入变量值位JDK的安装路径”** **选中系统变量中的path变量，单击编辑按钮在变量中添加** 1%JAVA_HOME%\\bin //注意前后用分号隔开 **在系统变量中新建CLASSPATH变量，变量值为 . ** **配置完成后在命令行中检验是否配置成功** **具体步骤：** 1. 键盘输入win + r 2. 输入 cmd 单击运行 3. 在命令行中输入 javac 然后回车，出现以下结果则为配置成功 4. 若出现&quot;javac不是内部命令或外部命令，也不是可执行的程序或批处理文件&quot;，检查配置过程是否有错","categories":[{"name":"Java","slug":"Java","permalink":"https://gushiii.github.io/categories/Java/"}],"tags":[{"name":"Java环境","slug":"Java环境","permalink":"https://gushiii.github.io/tags/Java环境/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-07-16T04:19:40.751Z","updated":"2018-07-18T08:11:27.200Z","comments":true,"path":"2018/07/16/hello-world/","link":"","permalink":"https://gushiii.github.io/2018/07/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}